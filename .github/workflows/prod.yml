name: Deploy to prod

on: workflow_dispatch

env:
  PROD_MACHINE_IP: ${{ vars.PROD_MACHINE_IP }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the backend image
        run: DOCKER_BUILDKIT=1 docker build -f docker/Dockerfile.backend . --tag cronback-backend:latest
      - name: Build the openapi image
        run: docker build -f docker/Dockerfile.openapi open-api --tag cronback-openapi:latest
      - name: Add SSH key
        env:
          SSH_KEY_BASE64: ${{ secrets.SSH_KEY_BASE64 }}
        run: |
          mkdir -p ~/.ssh
          echo $SSH_KEY_BASE64 | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Export and copy docker images
        run: |
          docker save cronback-backend:latest | gzip > /tmp/backend.tar.gz
          docker save cronback-openapi:latest | gzip > /tmp/openapi.tar.gz
          scp /tmp/backend.tar.gz root@"$PROD_MACHINE_IP":/tmp/backend.tar.gz
          scp /tmp/openapi.tar.gz root@"$PROD_MACHINE_IP":/tmp/openapi.tar.gz
          ssh root@"$PROD_MACHINE_IP" 'docker load < /tmp/backend.tar.gz'
          ssh root@"$PROD_MACHINE_IP" 'docker load < /tmp/openapi.tar.gz'
      - name: Fetch secrets
        env:
          BACKEND_ENV_FILE: ${{ secrets.PROD_BACKEND_ENV_FILE }}
        run: echo "$BACKEND_ENV_FILE" > .env
      - name: Start all the containers
        env:
          DOCKER_HOST: "ssh://root@${{env.PROD_MACHINE_IP}}"
        run: docker compose -p cronback -f docker/docker-compose.prod.yml up -d
