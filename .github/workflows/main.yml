name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUSTFLAGS: ""

jobs:
  rustfmt:
    name: RustFmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check formatting
        run: |
          cargo +nightly fmt --all -- --check
  lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt install -y protobuf-compiler
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: Clippy
        run: cargo clippy --all-targets --all-features
  test:
    name: Check & Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install dependencies
        run: sudo apt install -y protobuf-compiler
      - name: Check
        run: cargo check
      - name: Run Tests
        run: cargo test
  deploy:
    runs-on: self-hosted
    if: ${{ github.event_name == 'push' }}
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Build the backend image
        run: DOCKER_BUILDKIT=1 docker build -f docker/Dockerfile.backend . --tag cronback-backend:latest
      - name: Build the docs image
        run: docker build -f docker/Dockerfile.docs doc --tag cronback-docs:latest
      - name: Build the openapi image
        run: docker build -f docker/Dockerfile.openapi open-api --tag cronback-openapi:latest
      - name: Fetch secrets
        env:
          BACKEND_ENV_FILE: ${{ secrets.BACKEND_ENV_FILE }}
        run: echo "$BACKEND_ENV_FILE" > .env
      - name: Start all the containers
        run: docker compose -p cronback -f docker/docker-compose.prod.yml up -d
