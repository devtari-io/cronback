syntax = "proto3";

import "webhook.proto";

import "google/protobuf/duration.proto";

package trigger_proto;

enum TriggerStatus {
  TriggerStatus_UNKNOWN = 0;
  TriggerStatus_ACTIVE = 1;
  TriggerStatus_EXPIRED = 2;
  TriggerStatus_PAUSED = 3;
  TriggerStatus_CANCELED = 4;
}

message Cron {
  string cron = 1;
  string timezone = 2;
  // The number of times this trigger should run. A value of 0, means that it never expires
  uint64 events_limit = 3;
}

enum RetryPolicy {
  RetryPolicy_UNKNOWN = 0;
  RetryPolicy_SIMPLE = 1;
  RetryPolicy_EXPONENTIAL = 2;
}

enum NotificationType {
  Notifications_UNKNOWN = 0;
  Notifications_SLACK = 1;
}

// use enum instead
message EventRetryPolicy {
  optional RetryPolicy policy = 1;
  int32 limit = 2;
  google.protobuf.Duration delay = 3;
  // Only relevant in the exponential policy
  google.protobuf.Duration max_delay = 4;
  repeated NotificationType notifications = 5;
}

message OnStatusHandler {
  // TODO: Needs revision
  repeated NotificationType notifications = 1;
  // A value of zero means that it doesn't get auto cancelled
  int32 auto_cancel_after = 2;
}

message Payload {
  string content_type = 1;
  map<string, string> headers = 2;
  bytes body = 3;
}

message Emit {
  oneof emit {
    webhook_proto.Webhook webhook = 1;
    //Tunnel tunnel = 2;
  }
}

message RunAt {
  repeated string run_at = 1;
}
message Schedule {
  oneof schedule {
    Cron cron = 1;
    // timepoint defined in iso 8601 format
    RunAt run_at = 2;
  }
}

message Trigger {
  string id = 1;
  string owner_id = 2;
  /// [Future] User supplied identifier, unique per owner account
  optional string reference_id = 3;
  optional string name = 4;
  optional string description = 5;
  string created_at = 6;
  // TODO: Support multiple emits.
  Emit emit = 7;
  Payload payload = 8;
  Schedule schedule = 10;
  TriggerStatus status = 11;
  OnStatusHandler on_success = 12;
  OnStatusHandler on_failure = 13;
}

