openapi: 3.1.0
x-stoplight:
  id: k35idp3ucv89r
info:
  title: Cronback.me API
  version: '1.0'
  contact:
    name: Cronback Support
    url: 'https://cronback.me'
    email: support@cronback.me
  termsOfService: 'https://cronback.me/terms'
  description: API needs a description
  summary: 'Scheduled, recurring, or on-demand triggers at scale'
servers:
  - url: 'https://api.cronback.me/v1'
    description: Production
  - description: Staging
    url: 'https://api.jungle.cronback.me/v1'
paths:
  '/triggers/{trigger_id}':
    parameters:
      - schema:
          type: string
        name: trigger_id
        in: path
        required: true
        description: Trigger token
    get:
      summary: Get Trigger Info by ID
      responses:
        '200':
          description: Trigger exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
              examples:
                Example 1:
                  value:
                    id: trig_ab1.01GWCXWB869BXW8Q2XZGE0JBQ6
                    owner_id: acc_0FGWCXWB869BXWSQ2XZGE0JBA3
                    name: my example trigger
                    created_at: '2023-03-25T17:43:23.654278298Z'
                    reference_id: string
                    description: Periodically ping healthcheck.io
                    emit:
                      - webhook:
                          url: 'https://example.com/my-own-endpoint'
                          http_method: POST
                          timeout_s: 6.2
                          retry:
                            simple_retry:
                              max_num_attempts: 0
                              delay_s: 1
                    payload:
                      body: '{"key": "value"}'
                      content_type: application/json; charset=utf-8
                      headers: {}
                    schedule:
                      recurring:
                        cron: 15 35 * * * *
                        timezone: Europe/London
                        limit: 4
                        remaining: 0
                    status: active
          headers:
            cronback-trace-id:
              schema:
                type: string
              description: A random trace id generated by cronback for debugging
        '404':
          $ref: '#/components/responses/Error'
      operationId: get-trigger
      description: Retrieve information about an existing installed trigger
      x-internal: false
      parameters: []
      tags:
        - Triggers
  /triggers:
    get:
      summary: List triggers
      operationId: list-triggers
      description: Returns a list of Triggers
      tags:
        - Triggers
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: A limit on the number of triggers to be returned. Limit can be a number between 1 and 100. Default limit is 20.
        - schema:
            type: string
          in: query
          description: A cursor for use in pagination. `before` is an object ID that defines your place in the list.
          name: before
        - schema:
            type: string
          in: query
          name: after
          description: A cursor for use in pagination. `after` is an object ID that defines your place in the list.
      responses:
        '200':
          description: |-
            Returns a hash with `data` property that contains an array of up to `limit` Triggers, starting triggers specified in `after` or before triggers specified in `before`.

            Objects returned are sorted in reverse chronological orders (most recently created comes first).

            This API will not fail (unless for authentication, or internal errors).
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trigger'
                  has_more:
                    type: boolean
                    description: '`has_more` is true if limit was reached before returning all results.'
      security:
        - api_key: []
    post:
      summary: Install a new trigger
      operationId: install-triggers
      responses:
        '201':
          description: Trigger has been installed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
              examples: {}
        '400':
          $ref: '#/components/responses/Error'
      description: Install a new trigger to cronback scheduler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
            examples: {}
      tags:
        - triggers
    parameters: []
  /invocations:
    get:
      summary: Your GET endpoint
      responses: {}
      operationId: get-invocations
      tags:
        - Invocations
  '/triggers/{trigger_id}/invocations':
    parameters:
      - schema:
          type: string
        name: trigger_id
        in: path
        required: true
        description: Identifier of the trigger
    get:
      summary: Your GET endpoint
      responses: {}
      operationId: get-triggers-trigger_id-invocations
      tags:
        - Triggers
        - Invocations
  '/invocations/{invocation_id}/attempts':
    parameters:
      - schema:
          type: string
        name: invocation_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses: {}
      operationId: get-invocations-invocation_id-attempts
      tags:
        - Invocations
  '/invocations/{invocation_id}':
    parameters:
      - schema:
          type: string
        name: invocation_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses: {}
      operationId: get-invocations-invocation_id
      tags:
        - Invocations
  /admin/api_key:
    get:
      summary: Your GET endpoint
      responses: {}
      operationId: get-admin-api_key
      tags:
        - Admin
      description: ''
components:
  schemas:
    Trigger:
      type: object
      x-examples:
        Example 1:
          created_at: '2023-03-25T17:43:23.654278298Z'
          description: Periodically ping healthcheck.io
          emit:
            - webhook:
                http_method: GET
                retry: null
                timeout_s: 5
                url: 'https://hc-ping.com/812aaa48-08a5-45b7-a74c-e5baebc10ec1'
          hidden_last_invoked_at: '2023-03-25T21:35:00.057112087Z'
          id: trig_ab1.01GWCXWB869BXW8Q2XZGE0JBQ6
          name: Healthchecks.io
          owner_id: ab1
          payload:
            body: '{}'
            content_type: application/json
            headers:
              test-header: test-value
          schedule:
            recurring:
              cron: 0 35 * * * *
              limit: 0
              remaining: 0
              timezone: Etc/UTC
          status: active
      description: Defines a scheduled or on-demand trigger.
      x-stoplight:
        id: jg714xz8kn27b
      examples: []
      properties:
        id:
          type: string
          example: trig_ab1.01GWCXWB869BXW8Q2XZGE0JBQ6
          description: A unique identifier for the trigger
          readOnly: true
        owner_id:
          type: string
          example: acc_0FGWCXWB869BXWSQ2XZGE0JBA3
          description: The account owning this trigger
          readOnly: true
        name:
          type: string
          example: my example trigger
          description: A human-readable name to identify the trigger. This doesn't need to be unique but we recommend picking unique names to avoid confusion
        created_at:
          type: string
          format: date-time
          example: '2023-03-25T17:43:23.654278298Z'
          description: ISO8601 datetime when this trigger was installed
          readOnly: true
        reference_id:
          type: string
          description: Unique user-supplied identified for this trigger. This can be used as an idempotency key when creating triggers. Must be unique if set.
        description:
          type: string
          example: Periodically ping healthcheck.io
          description: A human-readable description.
        emit:
          type: array
          description: 'Which targets to emit when this trigger is invoked, whether this was invoked on a schedule or manually.'
          items:
            oneOf:
              - properties:
                  webhook:
                    $ref: '#/components/schemas/WebhookTarget'
                    x-stoplight:
                      id: my7qyo5isydor
            type: object
        payload:
          $ref: '#/components/schemas/Payload'
        schedule:
          oneOf:
            - $ref: '#/components/schemas/Cron'
            - $ref: '#/components/schemas/RunAt'
        status:
          type: string
          enum:
            - active
            - paused
            - expired
            - canceled
          description: |-
            Status of the trigger. 
            - `active` triggers can be invoked either manually of according to their `trigger.schedule`
            - `paused` triggers will be invoked but will not emit anything.
            - `expired` triggers are scheduled triggers that exhausted their invocations or have no future timepoints.
            - `canceled` triggers cannot be invoked. Those have been cancelled manually via the `/triggers/{trigger_id}/cancel` API.
          example: active
          readOnly: true
      required:
        - emit
        - payload
    Payload:
      title: Payload
      x-stoplight:
        id: 4r9satondb3ns
      type: object
      properties:
        body:
          type: string
          x-stoplight:
            id: u9dsnyz7t32li
          description: The body of the payload is sent as is when a trigger is emitted.
          example: '{"key": "value"}'
        content_type:
          type:
            - string
            - 'null'
          x-stoplight:
            id: nxz1bp0pppsm8
          default: application/json; charset=utf-8
        headers:
          type: object
          x-stoplight:
            id: qsuqhdb5olzux
      x-internal: true
    Cron:
      title: Recurring
      x-stoplight:
        id: gaeky3l62bqwt
      type: object
      description: Defines the recurring schedule
      properties:
        recurring:
          type: object
          properties:
            cron:
              type: string
              x-stoplight:
                id: i4c7adqqo0h26
              example: 15 35 * * * *
              description: 'A cron-like string to specify when the trigger will be invoked. The cron pattern uses this format: `sec  min   hour   day-of-month   month   day-of-week   year`'
            timezone:
              type: string
              x-stoplight:
                id: p9al0cie3y72r
              default: Etc/UTC
              example: Europe/London
              description: 'A valid [IANA TZ Identifier](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) to qualify the cron pattern with'
            limit:
              type: integer
              x-stoplight:
                id: mfadwrgzmqo8q
              default: 0
              format: int64
              minimum: 0
              example: 4
              description: The maximum number of invocations. The trigger's status will transition to `expired` automatically when no more invocations are left
            remaining:
              type: integer
              x-stoplight:
                id: 2d3nwf30r6s2h
              default: 0
              description: 'If limit is set, this will indicate how many future invocations this trigger still has before expiring'
              readOnly: true
      x-internal: true
    WebhookTarget:
      title: WebhookTarget
      x-stoplight:
        id: cvqbxrub68rym
      type: object
      properties:
        url:
          type: string
          x-stoplight:
            id: hplwwhhbgujsf
          format: uri
          example: 'https://example.com/my-own-endpoint'
        http_method:
          type: string
          x-stoplight:
            id: iijb3i01l7yzu
          enum:
            - GET
            - PUT
            - PATCH
            - HEAD
            - DELETE
            - POST
          default: POST
        timeout_s:
          type: number
          x-stoplight:
            id: 988edpijqnr7k
          format: double
          default: 5
          example: 6.2
          minimum: 1
          exclusiveMaximum: 30
          description: The number of seconds (use fractions for millis) to wait before considering the webhook attempt as `failed`
        retry:
          x-stoplight:
            id: nfrhe59pnh9v8
          description: The retry policy to use if attempts to execute this webhook fail
          oneOf:
            - $ref: '#/components/schemas/SimplyRetry'
            - $ref: '#/components/schemas/ExponentialBackoffRetry'
              x-stoplight:
                id: nd1qrafgotilf
      required:
        - url
      x-internal: true
    RunAt:
      title: RunAt
      x-stoplight:
        id: gwoegy0bco96d
      type: object
      properties:
        run_at:
          type: object
          properties:
            timepoints:
              type: array
              x-stoplight:
                id: pwbg3osqehonh
              minItems: 1
              uniqueItems: true
              maxItems: 5000
              description: 'ISO8601 datetime values (also accepts ISO8601 duration format as inpu, e.g. PT5M)'
              items:
                x-stoplight:
                  id: 7ig7mb74opass
                type: string
                format: date-time
                example: '2023-03-26T12:49:41+00:00'
            remaining:
              type: integer
              x-stoplight:
                id: c85h4py9obh4r
              format: int64
              readOnly: true
          required:
            - timepoints
      examples:
        - run_at:
            timepoints:
              - '2023-03-26T12:49:41+00:00'
            remaining: 1
        - run_at:
            timepoints:
              - PT5M
      x-internal: true
    ExponentialBackoffRetry:
      title: ExponentialBackoffRetry
      x-stoplight:
        id: cmnjvelmfykfa
      type: object
      properties:
        exponential_backoff_retry:
          type: object
          x-stoplight:
            id: tl3k7nv4gtbmp
          properties:
            max_num_attempts:
              type: integer
              x-stoplight:
                id: h3xkmm43oqqo7
              format: int64
              minimum: 1
              description: The maximum number of attempts before giving up
            delay_s:
              type: number
              x-stoplight:
                id: c7cuc75am2ewg
              format: double
              minimum: 1
              description: The initial delay in seconds between attempts. This value is doubled on every subsequent attempt
            max_delay_s:
              type: number
              x-stoplight:
                id: bsvj0ygpn9nqv
              format: double
              minimum: 1
              description: The upper cap for the delay. Delays are doubled on each attempt until it reaches `max_delay_s`
      description: An exponential backoff retry policy
      x-internal: true
    SimplyRetry:
      title: SimplyRetry
      x-stoplight:
        id: svb1o16ieshm2
      type: object
      description: A simple retry policy (every X seconds)
      properties:
        simple_retry:
          type: object
          x-stoplight:
            id: vkv1yxpop5xei
          properties:
            max_num_attempts:
              type: integer
              x-stoplight:
                id: uxi4p9ug8m52q
              format: int32
              description: The maximum number of attempts before giving up
            delay_s:
              type: number
              x-stoplight:
                id: a94kssf1bzlb4
              format: double
              minimum: 1
              description: The delay in seconds between every attempt
      x-internal: true
  securitySchemes:
    api_key:
      type: http
      scheme: bearer
      description: API secret key acquired from cronback admin API
  requestBodies: {}
  responses:
    Error:
      description: An error has occurred. The error body contains information about what went wrong.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
                description: A human readable description of the error
              error_type:
                type: string
                description: An enum value of the category of error
security:
  - api_key: []
